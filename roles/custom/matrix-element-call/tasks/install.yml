---
# roles/custom/matrix-element-call/tasks/install.yml

# Ensure Required Directories Exist
- name: Ensure matrix-element-call paths exist
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: directory
    mode: 0750
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"
  with_items:
    - path: "{{ matrix_element_call_base_path }}"
    - path: "{{ matrix_base_data_path }}/static-files/public/.well-known/element"  # Directory for element.json

# Ensure Configuration Files are in Place
- name: Ensure Element Call config.json is in place
  ansible.builtin.template:
    src: "{{ role_path }}/templates/config.json.j2"
    dest: "{{ matrix_element_call_base_path }}/config.json"
    mode: 0640
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

- name: Ensure matrix-element-call Docker labels file is in place
  ansible.builtin.template:
    src: "{{ role_path }}/templates/element-call-labels.j2"
    dest: "{{ matrix_element_call_base_path }}/element-call-labels"
    mode: 0640
    owner: "{{ matrix_user_username }}"
    group: "{{ matrix_user_groupname }}"

# Ensure Docker Images are Pulled
- name: Ensure matrix-element-call Docker image is pulled
  community.docker.docker_image:
    name: "{{ matrix_element_call_container_image }}"
    source: pull
    force_source: "{{ matrix_element_call_container_image_force_pull }}"
  register: element_call_image_result
  retries: "{{ devture_playbook_help_container_retries_count }}"
  delay: "{{ devture_playbook_help_container_retries_delay }}"
  until: element_call_image_result is not failed

# Systemd Services for Element Call
- name: Ensure matrix-element-call systemd service is installed
  ansible.builtin.template:
    src: "{{ role_path }}/templates/systemd/matrix-element-call.service.j2"
    dest: "{{ devture_systemd_docker_base_systemd_path }}/matrix-element-call.service"
    mode: 0644
